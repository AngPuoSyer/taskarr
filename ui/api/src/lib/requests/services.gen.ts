// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { TaskControllerCreateTaskData, TaskControllerCreateTaskResponse, TaskControllerGetTaskData, TaskControllerGetTaskResponse, TaskControllerUpdateTaskData, TaskControllerUpdateTaskResponse, TaskControllerDeleteTaskData, TaskControllerDeleteTaskResponse, TasksControllerGetTasksData, TasksControllerGetTasksResponse } from './types.gen';

export class DefaultService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CreateTaskResponse
     * @throws ApiError
     */
    public static taskControllerCreateTask(data: TaskControllerCreateTaskData): CancelablePromise<TaskControllerCreateTaskResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/task',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns GetTaskResponse
     * @throws ApiError
     */
    public static taskControllerGetTask(data: TaskControllerGetTaskData): CancelablePromise<TaskControllerGetTaskResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/task/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns UpdateTaskResponse
     * @throws ApiError
     */
    public static taskControllerUpdateTask(data: TaskControllerUpdateTaskData): CancelablePromise<TaskControllerUpdateTaskResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/api/v1/task/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns DeleteTaskResponse
     * @throws ApiError
     */
    public static taskControllerDeleteTask(data: TaskControllerDeleteTaskData): CancelablePromise<TaskControllerDeleteTaskResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/v1/task/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.query
     * @param data.sortOrder
     * @param data.sortBy
     * @returns GetTasksResponse
     * @throws ApiError
     */
    public static tasksControllerGetTasks(data: TasksControllerGetTasksData = {}): CancelablePromise<TasksControllerGetTasksResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/tasks',
            query: {
                query: data.query,
                sortOrder: data.sortOrder,
                sortBy: data.sortBy
            }
        });
    }
    
}