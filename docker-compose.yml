version: '3.8'

services:
    api:
        build:
            context: .
            dockerfile: ./apps/taskarr/Dockerfile
        restart: always
        ports:
            - '3000:3000'
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        depends_on:
            db:
                condition: service_healthy
                restart: true
        networks:
            - taskarr-network
    web:
        build:
            context: .
            dockerfile: ./apps/taskarr-frontend/Dockerfile
        restart: always
        ports:
            - '3001:3000'
        environment:
            - BACKEND_URL=${POSTGRES_HOST}
        depends_on:
            - api
        networks:
            - taskarr-network
    db:
        image: postgres:17-alpine
        restart: always
        ports:
            - '5432:5432'
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
            interval: 10s
            retries: 5
            start_period: 30s
            timeout: 10s
        volumes:
            - .temp/db/data:/var/lib/postgresql/data
        networks:
            - taskarr-network

networks:
    taskarr-network:
        driver: bridge
